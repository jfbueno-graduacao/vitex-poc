version: "3.8"

services:
  database-fog_node-2:
    user: root
    build: 
      context: ./infra/sql-server-replicas/setup/
      dockerfile: Dockerfile
    container_name: database_fog_node_2
    env_file:
      - replicas-environment-variables/mssql.env
    ports:
      - "54340:1433"
    volumes:
      - ./infra/sqlserver-fog/mssql.conf:/var/opt/mssql/mssql.conf:ro
    networks:
      - network_fog_2
    healthcheck:
      test: /opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P ${SQL_SERVER_REPLICA_PASSWORD} -Q 'select 1'

  connector-faker_node-2:
    image: tcc/connector-faker
    container_name: connector-faker_node-2
    environment:
      - ConnectionStrings__Default=Server=database-fog_node-2;Database=VitalSignReadings;User=sa;Password=${SQL_SERVER_REPLICA_PASSWORD};TrustServerCertificate=True;
    networks:
      - network_fog_2
    depends_on:
      database-fog_node-2:
        condition: service_healthy    
    restart: unless-stopped
  
  connector-producer_node-2:
    image: tcc/connector-producer
    container_name: connector-producer_node-2
    env_file:
      - replicas-environment-variables/connector-producer-prod.env
    environment:
      - ConnectionStrings__Default=Server=database-fog_node-2;Database=VitalSignReadings;User=sa;Password=${SQL_SERVER_REPLICA_PASSWORD};TrustServerCertificate=True;
      - ConnectorConfig__FogNode__Id=40c35b8e-362f-4940-8eaf-b34621371b88
      - ConnectorConfig__FogNode__Name=Roselândia
      - ConnectorConfig__FogNode__Latitude=-29.648223 
      - ConnectorConfig__FogNode__Longitude=-51.139571
    networks:
      - network_fog_2
      - network_link_fog_cloud
      - network_fog # Apenas para integração de alertas em desenvolvimento
    depends_on:
      broker_mqtt:
        condition: service_started
      database-fog_node-2:
        condition: service_healthy    
    restart: unless-stopped

  database-fog_node-3:
    user: root
    build: 
      context: ./infra/sql-server-replicas/setup/
      dockerfile: Dockerfile
    container_name: database_fog_node_3
    env_file:
      - replicas-environment-variables/mssql.env
    ports:
      - "54341:1433"
    volumes:
      - ./infra/sqlserver-fog/mssql.conf:/var/opt/mssql/mssql.conf:ro
    networks:
      - network_fog_3
    healthcheck:
      test: /opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P ${SQL_SERVER_REPLICA_PASSWORD} -Q 'select 1'

  connector-faker_node-3:
    image: tcc/connector-faker
    container_name: connector-faker_node-3
    environment:
      - ConnectionStrings__Default=Server=database-fog_node-3;Database=VitalSignReadings;User=sa;Password=${SQL_SERVER_REPLICA_PASSWORD};TrustServerCertificate=True;
    networks:
      - network_fog_3
    depends_on:
      database-fog_node-3:
        condition: service_healthy
    restart: unless-stopped

  connector-producer_node-3:
    image: tcc/connector-producer
    container_name: connector-producer_node-3
    env_file:
      - replicas-environment-variables/connector-producer-prod.env
    environment:
      - ConnectionStrings__Default=Server=database-fog_node-3;Database=VitalSignReadings;User=sa;Password=${SQL_SERVER_REPLICA_PASSWORD};TrustServerCertificate=True;
      - ConnectorConfig__FogNode__Id=bcfea54e-3799-4b1a-875f-864c1e5effcd
      - ConnectorConfig__FogNode__Name=Canudos
      - ConnectorConfig__FogNode__Latitude=-29.674966
      - ConnectorConfig__FogNode__Longitude=-51.096831
    networks:
      - network_fog_3
      - network_link_fog_cloud
      - network_fog # Apenas para integração de alertas em desenvolvimento
    depends_on:
      broker_mqtt:
        condition: service_started
      database-fog_node-3:
        condition: service_healthy
    restart: unless-stopped

  database-fog_node-4:
    user: root
    build: 
      context: ./infra/sql-server-replicas/setup/
      dockerfile: Dockerfile
    container_name: database_fog_node_4
    env_file:
      - replicas-environment-variables/mssql.env
    ports:
      - "54342:1433"
    volumes:
      - ./infra/sqlserver-fog/mssql.conf:/var/opt/mssql/mssql.conf:ro
    networks:
      - network_fog_4
    healthcheck:
      test: /opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P ${SQL_SERVER_REPLICA_PASSWORD} -Q 'select 1'

  connector-faker_node-4:
    image: tcc/connector-faker
    container_name: connector-faker_node-4
    environment:
      - ConnectionStrings__Default=Server=database-fog_node-4;Database=VitalSignReadings;User=sa;Password=${SQL_SERVER_REPLICA_PASSWORD};TrustServerCertificate=True;
    networks:
      - network_fog_4
    depends_on:
      database-fog_node-4:
        condition: service_healthy
    restart: unless-stopped

  connector-producer_node-4:
    image: tcc/connector-producer
    container_name: connector-producer_node-4
    env_file:
      - replicas-environment-variables/connector-producer-prod.env
    environment:
      - ConnectionStrings__Default=Server=database-fog_node-4;Database=VitalSignReadings;User=sa;Password=${SQL_SERVER_REPLICA_PASSWORD};TrustServerCertificate=True;
      - ConnectorConfig__FogNode__Id=4b227aed-68fa-4198-8e26-1df6d66c213f
      - ConnectorConfig__FogNode__Name=Rincão
      - ConnectorConfig__FogNode__Latitude=-29.674966
      - ConnectorConfig__FogNode__Longitude=-51.096831
    networks:
      - network_fog_4
      - network_link_fog_cloud
      - network_fog # Apenas para integração de alertas em desenvolvimento
    depends_on:
      broker_mqtt:
        condition: service_started
      database-fog_node-4:
        condition: service_healthy
    restart: unless-stopped

networks:
  network_fog_2:
    driver: bridge
  network_fog_3:
    driver: bridge
  network_fog_4:
    driver: bridge